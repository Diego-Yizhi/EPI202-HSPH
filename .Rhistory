# adjust factor variables
fac_vars <- names(mi_onset_10)[c(1,3:10,12:14)]
mi_onset_10[fac_vars] <- lapply(mi_onset_10[fac_vars],factor)
mi_onset_10_cat <- mi_onset_10 %>%
mutate(age_cat = fct_recode(age_cat,
"<50yrs"="1","50-64yrs"="2","65+yrs"="3"),
female_cat=fct_recode(female,"F"="1","M"="0"),
married_cat=fct_recode(married, "yes"="1","no"="0"),
educ_cat=fct_recode(educ,"<HS"="1","HS"="2",">HS"="3"),
dm_cat=fct_recode(dm,"yes"="1","no"="0"),
htn_cat=fct_recode(htn,"yes"="1","no"="0"),
phys_cat=fct_recode(phys_activity,"<1/wk"="0","1-3/wk"="1","4+/wk"="2"),
evermarj_cat=fct_recode(evermarj,"yes"="1","no"="0"),
dead_cat=fct_recode(dead,"yes"="1","no"="0"),
cvdeath_cat=fct_recode(cvdeath,"CVD death"="1","not CVD death"="0"),
sedentary = fct_recode(phys_activity, "yes"="0", "no"="1","no"="2"),
sedendm_cat = fct_recode(sedendm, "sedentary and diabetes"="1",
"no sedentary and diabetes"="2", "sedentary and no diabetes"="3",
"no sedentary and no diabetes"="4")
) %>%
mutate(dead_cat = fct_rev(dead_cat),
sedentary = fct_rev(sedentary),
sedendm_cat = fct_rev(sedendm_cat))
mi_onset_10_cat
names(mi_onset_10_cat)
vars_mi <- names(mi_onset_10_cat)[c(2,3,15:19,24)]
vars_mi
vars_mi <- names(mi_onset_10_cat)[c(2,3,15:19)]
fac_vars_mi <- names(mi_onset_10_cat)[c(3,15:19)]
table1 <- CreateTableOne(vars = vars_mi,
strata = "sedentary",
data = mi_onset_10_cat,
addOverall = T, includeNA = T)
table1_print <- print(table1, showAllLevels = T)
write.csv(table1_print, "A3_tableone.csv")
write.csv(table1_print, "HW/HW3/A3_tableone.csv")
export(table1_print, file = "HW/HW3/A3_tableone.docx")
export(table1_print, file = "HW/HW3/A3_tableone.xls")
export(table1_print, "HW/HW3/A3_tableone.xls")
export(table1_print, "HW/HW3/A3_tableone.xlsx")
export(table1_print, "HW/HW3/A3_tableone.csv")
export(table1_print, "HW/HW3/A3_tableone.xlsx", col.names = F)
export(table1_print, "HW/HW3/A3_tableone.xlsx", colNames = F)
export(table1_print, "HW/HW3/A3_tableone.xlsx", keepNA = T)
table1_print <- print(table1, quote = T ,showAllLevels = T)
export(table1_print, "HW/HW3/A3_tableone.xlsx", keepNA = T)
write.csv(table1_print, "HW/HW3/A3_tableone.csv")
table1_print <- print(table1,showAllLevels = T)
export(table1_print, "HW/HW3/A3_tableone.xlsx", keepNA = T)
export(table1_print, "HW/HW3/A3_tableone.xlsx", row.names = T)
export(table1_print, "HW/HW3/A3_tableone.xlsx", rowNames = T)
table1 <- CreateTableOne(vars = vars_mi,
strata = "sedentary",
data = mi_onset_10_cat,
addOverall = T, includeNA = T)
table1_print <- print(table1,showAllLevels = T)
export(table1_print, "HW/HW3/A3_tableone.xlsx", rowNames = T,
colNames = T)
write.csv(table1_print, "HW/HW3/A3_tableone.csv")
#Load packages
pacman::p_load(tidyverse, patchwork, ggsignif,
gtsummary, janitor, rstatix,
scales, flextable, here,rio,modelsummary)
#Source the epicalc package- set this to the file path where you saved the epicalc_v3 file
source(here("code","epicalc_v3.R"))
#Load data
# evansData<-rio::import("data/evans_example_dat.csv", header=T)
dat <- import(here("data","HeightWeight.rdata"))
glimpse(dat)
skimr::skim(dat)
dat <- dat %>%
mutate(female_cat = factor(female,
levels = c(0,1),
labels = c("Male","Female")))
# 3 delete outliers
dat_new <- dat %>%
filter(age <= 21)
dat_new <- dat_new %>% mutate(age_cat = case_when(
age<15 ~ 1,
age>=15 & age<=18 ~ 2,
age>18 ~ 3
))
datasummary_df(dat_new)
datasummary_balance(~female,
data = dat_new[c("age","age_cat")])
datasummary_balance(~female,
data = dat_new[c("age","age_cat","female")])
install.packages("estimatr")
datasummary_balance(~female,
data = dat_new[c("age","age_cat","female")],
output = "huxtable",
fmt = 3,
dinm_statistic = "p.value")
datasummary_balance(~female,
data = dat_new[c("age","age_cat","female")],
output = "huxtable",
fmt = 3,
stars = T,
dinm_statistic = "p.value")
install.packages("modelsummary",dependencies = T)
install.packages("modelsummary", dependencies = T)
#Load packages
pacman::p_load(tidyverse, patchwork, ggsignif,
gtsummary, janitor, rstatix,
scales, flextable, here,rio,modelsummary)
#Source the epicalc package- set this to the file path where you saved the epicalc_v3 file
source(here("code","epicalc_v3.R"))
#Load data
# evansData<-rio::import("data/evans_example_dat.csv", header=T)
mi_onset_10 <- import(here("data","MI_Onset_10.rdata"))
mi_onset_10 <- mi_onset_10 %>% mutate(sedendm = case_when(
phys_activity==0 & dm==1 ~ 1,
phys_activity!=0 & dm==1 ~ 2,
phys_activity==0 & dm!=1 ~ 3,
phys_activity!=0 & dm!=1 ~ 4
))
# adjust factor variables
fac_vars <- names(mi_onset_10)[c(1,3:10,12:14)]
mi_onset_10[fac_vars] <- lapply(mi_onset_10[fac_vars],factor)
mi_onset_10_cat <- mi_onset_10 %>%
mutate(age_cat = fct_recode(age_cat,
"<50yrs"="1","50-64yrs"="2","65+yrs"="3"),
female_cat=fct_recode(female,"F"="1","M"="0"),
married_cat=fct_recode(married, "yes"="1","no"="0"),
educ_cat=fct_recode(educ,"<HS"="1","HS"="2",">HS"="3"),
dm_cat=fct_recode(dm,"yes"="1","no"="0"),
htn_cat=fct_recode(htn,"yes"="1","no"="0"),
phys_cat=fct_recode(phys_activity,"<1/wk"="0","1-3/wk"="1","4+/wk"="2"),
evermarj_cat=fct_recode(evermarj,"yes"="1","no"="0"),
dead_cat=fct_recode(dead,"yes"="1","no"="0"),
cvdeath_cat=fct_recode(cvdeath,"CVD death"="1","not CVD death"="0"),
sedentary = fct_recode(phys_activity, "yes"="0", "no"="1","no"="2"),
sedendm_cat = fct_recode(sedendm, "sedentary and diabetes"="1",
"no sedentary and diabetes"="2", "sedentary and no diabetes"="3",
"no sedentary and no diabetes"="4")
) %>%
mutate(dead_cat = fct_rev(dead_cat),
sedentary = fct_rev(sedentary),
sedendm_cat = fct_rev(sedendm_cat))
# overview the dataset
datasummary_skim(mi_onset_10_cat)
skimr::skim(mi_onset_10_cat)
glimpse(mi_onset_10_cat)
# overview the dataset
mi_onset_10_cat %>% datasummary(age ~ mean + sd)
# overview the dataset
mi_onset_10_cat %>% datasummary(age ~ mean + sd, data = .)
# overview the dataset
skimr::skim(mi_onset_10_cat)
# 1 2*2 table
mi_onset_10_cat %>%
group_by(dm_cat) %>%
count(cvdeath_cat) %>%
mutate(prop = n/sum(n))
mi_onset_10_cat %>%
gmodels::CrossTable(cvdeath_cat, dm_cat)
gmodels::CrossTable(mi_onset_10_cat$cvdeath_cat, mi_onset_10_cat$dm_cat)
# 1 2*2 table
mi_onset_10_cat %>%
group_by(dm_cat) %>%
count(cvdeath_cat) %>%
mutate(prop = n/sum(n))
OR <- 246*2469/(547*450)
(OR <- 246*2469/(547*450))
# 2. 2*2 table
(crosstable <- mi_onset_10_cat %>%
group_by(dm_cat) %>%
count(cvdeath_cat) %>%
mutate(prop = n/sum(n)))
(OR <- crosstable[4,3])
(OR <- crosstable[4,3]*crosstable[1,3]/(crosstable[2,3]*crosstable[3,3]))
(log_1 %>% tidy(conf.int=T))
# 3. create a logit regre
log_1 <- glm(cvdeath_cat ~ dm_cat,
data = mi_onset_10_cat,
family = binomial(link = "logit"))
(log_1 %>% tidy(conf.int=T))
(log_1 %>% tidy(exponentiate=T,onf.int=T))
(log_1 %>% tidy(exponentiate=T,conf.int=T))
(log_1 %>% tidy(conf.int=T))
(log_1 %>% tidy(exponentiate=T,conf.int=T))
(crosstable <- mi_onset_10_cat %>%
group_by(dm_cat) %>%
count(cvdeath_cat) %>%
mutate(prop = n/sum(n)))
(OR <- crosstable[4,3]*crosstable[1,3]/(crosstable[2,3]*crosstable[3,3]))
# 5 cvdeath~dm+age
log_2 <- glm(cvdeath_cat ~ dm_cat + age,
data = mi_onset_10_cat, family = binomial(link = "logit"))
(log_2 %>%  tidy(conf.int=T))
(log_2 %>% tidy(exponentiate=T, conf.int=T))
# 6 10-year increament
exp(10*(log_2 %>%  tidy(conf.int=T))[3,2])
(log_2 %>%  tidy(conf.int=T))[3,2]
crosstable[4,3]*crosstable[1,3]/(crosstable[2,3]*crosstable[3,3])
glimpse(mi_onset_10_cat)
log_3 <- glm(cvdeath_cat ~ dm_cat+age+htn_cat+female_cat+phys_cat+educ_cat,
data = mi_onset_10_cat,
family = binomial(link = "logit"))
(log_3 %>%  tidy(conf.int=T))
(log_3 %>% tidy(exponentiate=T, conf.int=T))
(log_3 %>%  tidy(conf.int=T, showAllLevels = T))
modelsummary(log_3)
bruceR::model_summary(log_3)
bruceR::model_summary(exp(log_3))
bruceR::model_summary(list(log_1, log_2, log_3))
bruceR::model_summary(list(log_1, log_2, log_3),
exponentiate = T)
modelsummary(list(log_1, log_2, log_3),
exponentiate = T)
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T)
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = "huxtable")
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = "huxtable") %>%
export("text.docx")
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = "huxtable") %>%
export()
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = "huxtable") %>%
export("text.csv")
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = "huxtable") %>%
export("regression.csv", colNames = T)
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = "huxtable")
%>%
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = "huxtable") %>%
export("regression.csv")
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = "huxtable") %>%
export("regression.docx")
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = "huxtable") %>%
export("regression.xlsx")
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = "huxtable") %>%
export("weekly materials/6 Logistic regression/regression.xlsx")
# 8 htn*dm
log_4 <- glm(cvdeath_cat ~ dm_cat*htn_cat+age+female_cat+phys_cat+educ_cat,
data = mi_onset_10_cat,
family = binomial(link = "logit"))
modelsummary(list(log_3, log_4),
exponentiate = T, stars = T,output = "huxtable")
modelsummary(list(log_3, log_4),
estimate  = "{estimate} [{conf.low}, {conf.high}]",
exponentiate = T, stars = T,output = "huxtable")
modelsummary(list(log_3, log_4),
estimate  = "{estimate} [{conf.low}, {conf.high}]",
statistic = NULL,
exponentiate = T, stars = T,output = "huxtable")
modelsummary(list(log_3, log_4),
estimate  = "{estimate} ({conf.low}, {conf.high})",
statistic = NULL,
exponentiate = T,,output = "huxtable")
modelsummary(list(log_3, log_4),
estimate  = "{estimate} ({conf.low}, {conf.high})",
statistic = NULL,output = "huxtable")
exp(0.634-0.812)
exp(1.238-0.033)
1.884*0.444
3.449*0.968
modelsummary(list(log_3, log_4),
estimate  = "{estimate} ({conf.low}, {conf.high})",
statistic = NULL,
exponentiate = T,output = "huxtable")
exp(1.884*0.444)
1.884*0.444
3.449*0.968
#Load packages
pacman::p_load(tidyverse, patchwork, ggsignif,
gtsummary, janitor, rstatix,
scales, flextable, here,rio,modelsummary)
#Source the epicalc package- set this to the file path where you saved the epicalc_v3 file
source(here("code","epicalc_v3.R"))
# source("code/epicalc_v3.R")
#Load data
# evansData<-rio::import("data/evans_example_dat.csv", header=T)
mi_onset_10 <- import(here("data","MI_Onset_10.rdata"))
mi_onset_10 <- mi_onset_10 %>% mutate(sedendm = case_when(
phys_activity==0 & dm==1 ~ 1,
phys_activity!=0 & dm==1 ~ 2,
phys_activity==0 & dm!=1 ~ 3,
phys_activity!=0 & dm!=1 ~ 4
))
# adjust factor variables
fac_vars <- names(mi_onset_10)[c(1,3:10,12:14)]
mi_onset_10[fac_vars] <- lapply(mi_onset_10[fac_vars],factor)
mi_onset_10_cat <- mi_onset_10 %>%
mutate(age_cat = fct_recode(age_cat,
"<50yrs"="1","50-64yrs"="2","65+yrs"="3"),
female_cat=fct_recode(female,"F"="1","M"="0"),
married_cat=fct_recode(married, "yes"="1","no"="0"),
educ_cat=fct_recode(educ,"<HS"="1","HS"="2",">HS"="3"),
dm_cat=fct_recode(dm,"yes"="1","no"="0"),
htn_cat=fct_recode(htn,"yes"="1","no"="0"),
phys_cat=fct_recode(phys_activity,"<1/wk"="0","1-3/wk"="1","4+/wk"="2"),
evermarj_cat=fct_recode(evermarj,"yes"="1","no"="0"),
dead_cat=fct_recode(dead,"yes"="1","no"="0"),
cvdeath_cat=fct_recode(cvdeath,"CVD death"="1","not CVD death"="0"),
sedentary = fct_recode(phys_activity, "yes"="0", "no"="1","no"="2"),
sedendm_cat = fct_recode(sedendm, "sedentary and diabetes"="1",
"no sedentary and diabetes"="2", "sedentary and no diabetes"="3",
"no sedentary and no diabetes"="4")
) %>%
mutate(dead_cat = fct_rev(dead_cat),
sedentary = fct_rev(sedentary),
sedendm_cat = fct_rev(sedendm_cat))
# 7 cvdeath~dm+age+htn+female+phys_activity+educ
log_3 <- glm(cvdeath_cat ~ dm_cat+age+htn_cat+female_cat+phys_cat+educ_cat,
data = mi_onset_10_cat,
family = binomial(link = "logit"))
# 8 htn*dm
log_4 <- glm(cvdeath_cat ~ dm_cat*htn_cat+age+female_cat+phys_cat+educ_cat,
data = mi_onset_10_cat,
family = binomial(link = "logit"))
modelsummary(list(log_3, log_4),
estimate  = "{estimate} ({conf.low}, {conf.high})",
statistic = NULL,
exponentiate = T,output = "test.docx")
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = here("weekly materials","6 Logistic regression",
"log_1 to log_3.docx"))
modelsummary(list(log_3, log_4),
estimate  = "{estimate} ({conf.low}, {conf.high})",
statistic = NULL,
exponentiate = T,
output = here("weekly materials","6 Logistic regression",
"log_3 and 4.docx"))
#Load data
# evansData<-rio::import("data/evans_example_dat.csv", header=T)
cvdeath <- import(here("data","CVdeath_Case_control.rdata"))
glimpse(cvdeath)
# adjust factor variables
fac_vars <- names(cvdeath)[c(3:10)]
cvdeath[fac_vars] <- lapply(cvdeath[fac_vars],factor)
glimpse(cvdeath)
cvdeath_cat <- cvdeath %>%
mutate(age_cat = fct_recode(age_cat,
"<50yrs"="1","50-64yrs"="2","65+yrs"="3"),
female_cat=fct_recode(female,"F"="1","M"="0"),
married_cat=fct_recode(married, "yes"="1","no"="0"),
educ_cat=fct_recode(educ,"<HS"="1","HS"="2",">HS"="3"),
dm_cat=fct_recode(dm,"yes"="1","no"="0"),
htn_cat=fct_recode(htn,"yes"="1","no"="0"),
phys_cat=fct_recode(phys_activity,"<1/wk"="0","1-3/wk"="1","4+/wk"="2"),
case_cat = fct_recode(case, "case"="1","non-case"="0")
)
# overview the dataset
skimr::skim(cvdeath_cat)
# 2. 2*2 table
(crosstable <- cvdeath_cat %>%
group_by(dm_cat) %>%
count(case_cat) %>%
mutate(prop = n/sum(n)))
crosstable[4,3]*crosstable[1,3]/(crosstable[2,3]*crosstable[3,3])
# 3. create a logit regre
log_1 <- glm(case_cat ~ dm_cat,
data = cvdeath_cat,
family = binomial(link = "logit"))
(log_1 %>% tidy(conf.int=T))
(log_1 %>% tidy(exponentiate=T,conf.int=T))
# 5 cvdeath~dm+age
log_2 <- glm(case_cat ~ dm_cat + age,
data = cvdeath_cat, family = binomial(link = "logit"))
(log_2 %>%  tidy(conf.int=T))
(log_2 %>% tidy(exponentiate=T, conf.int=T))
# 6 10-year increament
exp(10*(log_2 %>%  tidy(conf.int=T))[3,2])
# 7 cvdeath~dm+age+htn+female+phys_activity+educ
log_3 <- glm(case_cat ~ dm_cat+age+htn_cat+female_cat+phys_cat+educ_cat,
data = cvdeath_cat,
family = binomial(link = "logit"))
(log_3 %>%  tidy(conf.int=T))
(log_3 %>% tidy(exponentiate=T, conf.int=T))
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = here("weekly materials","6 Logistic regression",
"log_1 to log_3.docx"))
(modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = here("weekly materials","6 Logistic regression",
"log_1 to log_3.docx")))
levels(cvdeath_cat$case_cat)
# 8 htn*dm
log_4 <- glm(case_cat ~ dm_cat*htn_cat+age+female_cat+phys_cat+educ_cat,
data = cvdeath_cat,
family = binomial(link = "logit"))
modelsummary(list(log_3, log_4),
estimate  = "{estimate} ({conf.low}, {conf.high})",
statistic = NULL,
exponentiate = T,
output = here("weekly materials","6 Logistic regression",
"log_3 and 4.docx"))
(log_2 %>%  tidy(conf.int=T))
# 6 10-year increament
exp(10*(log_2 %>%  tidy(conf.int=T))[3,2])
# 2. 2*2 table
(crosstable <- cvdeath_cat %>%
group_by(dm_cat) %>%
count(case_cat) %>%
mutate(prop = n/sum(n)))
crosstable[4,3]*crosstable[1,3]/(crosstable[2,3]*crosstable[3,3])
# 3. create a logit regre
log_1 <- glm(case_cat ~ dm_cat,
data = cvdeath_cat,
family = binomial(link = "logit"))
(log_1 %>% tidy(conf.int=T))
(log_1 %>% tidy(exponentiate=T,conf.int=T))
# 5 cvdeath~dm+age
log_2 <- glm(case_cat ~ dm_cat + age,
data = cvdeath_cat, family = binomial(link = "logit"))
(log_2 %>%  tidy(conf.int=T))
(log_2 %>% tidy(exponentiate=T, conf.int=T))
# 6 10-year increament
exp(10*(log_2 %>%  tidy(conf.int=T))[3,2])
# 7 cvdeath~dm+age+htn+female+phys_activity+educ
log_3 <- glm(case_cat ~ dm_cat+age+htn_cat+female_cat+phys_cat+educ_cat,
data = cvdeath_cat,
family = binomial(link = "logit"))
(log_3 %>%  tidy(conf.int=T))
(log_3 %>% tidy(exponentiate=T, conf.int=T))
modelsummary(list(log_1, log_2, log_3),
exponentiate = T,
stars = T,
output = "huxtable")
# 8 htn*dm
log_4 <- glm(case_cat ~ dm_cat*htn_cat+age+female_cat+phys_cat+educ_cat,
data = cvdeath_cat,
family = binomial(link = "logit"))
modelsummary(list(log_3,log_4),
exponentiate = T,
stars = T,
output = "huxtable")
modelsummary(list(log_3,log_4),
estimate  = "{estimate} ({conf.low}, {conf.high})",
exponentiate = T,
output = "huxtable")
modelsummary(list(log_3,log_4),
estimate  = "{estimate} ({conf.low}, {conf.high})",
exponentiate = T,
statistic = NULL,
output = "huxtable")
1.843*0.306
4.422*0.931
#Load packages
pacman::p_load(tidyverse, patchwork, ggsignif,
gtsummary, janitor, rstatix,
scales, flextable, here,rio,modelsummary)
#Source the epicalc package- set this to the file path where you saved the epicalc_v3 file
source(here("code","epicalc_v3.R"))
# source("code/epicalc_v3.R")
#Load data
# evansData<-rio::import("data/evans_example_dat.csv", header=T)
cvdeath <- import(here("data","CVdeath_Case_control.rdata"))
# adjust factor variables
fac_vars <- names(cvdeath)[c(3:10)]
cvdeath[fac_vars] <- lapply(cvdeath[fac_vars],factor)
cvdeath_cat <- cvdeath %>%
mutate(age_cat = fct_recode(age_cat,
"<50yrs"="1","50-64yrs"="2","65+yrs"="3"),
female_cat=fct_recode(female,"F"="1","M"="0"),
married_cat=fct_recode(married, "yes"="1","no"="0"),
educ_cat=fct_recode(educ,"<HS"="1","HS"="2",">HS"="3"),
dm_cat=fct_recode(dm,"yes"="1","no"="0"),
htn_cat=fct_recode(htn,"yes"="1","no"="0"),
phys_cat=fct_recode(phys_activity,"<1/wk"="0","1-3/wk"="1","4+/wk"="2"),
case_cat = fct_recode(case, "case"="1","non-case"="0")
)
# 3. create a logit regre
log_1 <- glm(case_cat ~ dm_cat,
data = cvdeath_cat,
family = binomial(link = "logit"))
# 5 cvdeath~dm+age
log_2 <- glm(case_cat ~ dm_cat + age,
data = cvdeath_cat, family = binomial(link = "logit"))
# 7 cvdeath~dm+age+htn+female+phys_activity+educ
log_3 <- glm(case_cat ~ dm_cat+age+htn_cat+female_cat+phys_cat+educ_cat,
data = cvdeath_cat,
family = binomial(link = "logit"))
# 8 htn*dm
log_4 <- glm(case_cat ~ dm_cat*htn_cat+age+female_cat+phys_cat+educ_cat,
data = cvdeath_cat,
family = binomial(link = "logit"))
